{"version":3,"file":"static/js/400.c2da03f8.chunk.js","mappings":"+SAEMA,EAAW,+BACXC,EAAU,mCAEHC,EAAc,mCAAG,sGACLC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,sCACoBC,IAFf,uBACpBG,EADoB,EACpBA,KADoB,kBAIrBA,GAJqB,2CAAH,qDAOdC,EAAY,mCAAG,WAAMC,GAAN,yFACHH,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iCACeC,EADf,kBACgCK,EADhC,+CADG,uBAClBF,EADkB,EAClBA,KADkB,kBAInBA,GAJmB,2CAAH,sDAOZG,EAAgB,mCAAG,WAAMC,GAAN,yFACPL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAQ,EADA,oBACmBP,EADnB,oBADO,uBACtBG,EADsB,EACtBA,KADsB,kBAIvBA,GAJuB,2CAAH,sDAOhBK,EAAgB,mCAAG,WAAMD,GAAN,yFACPL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAQ,EADA,4BAC2BP,EAD3B,oBADO,uBACtBG,EADsB,EACtBA,KADsB,kBAIvBA,GAJuB,2CAAH,sDAOhBM,EAAgB,mCAAG,WAAMF,GAAN,yFACPL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAQ,EADA,4BAC2BP,EAD3B,oBADO,uBACtBG,EADsB,EACtBA,KADsB,kBAIvBA,GAJuB,2CAAH,qD,2IC9BhBO,EAAOC,EAAAA,GAAAA,GAAH,oHAQJC,EAAMD,EAAAA,GAAAA,IAAH,6FAMHE,GAAUF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,qS,iLCfPI,EAAQJ,EAAAA,GAAAA,MAAH,kIAQLK,EAAOL,EAAAA,GAAAA,KAAH,sHAOJM,EAASN,EAAAA,GAAAA,OAAH,4OAeNO,EAAQP,EAAAA,GAAAA,MAAH,6F,SCmDlB,EA5Ee,WACb,OAA4BQ,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0BL,EAAAA,EAAAA,UAAS,MAAnC,eAAOM,EAAP,KAAcC,EAAd,KACA,GAA4BP,EAAAA,EAAAA,UAAS,QAArC,eAAOQ,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MACXzB,EAAQkB,EAAaQ,IAAI,SAEzBC,EAAU,mCAAG,yFACZ3B,EADY,wDAGjBuB,EAAU,WAHO,mBAMWxB,EAAAA,EAAAA,IAAaC,GANxB,gBAMP4B,EANO,EAMPA,QACRZ,EAAUY,GACVL,EAAU,YARK,kDAUfF,EAAS,EAAD,IACRE,EAAU,YAXK,0DAAH,sDAehBM,EAAAA,EAAAA,YAAU,WACRF,GAED,GAAE,IAiBH,OAFAG,QAAQC,IAAIhB,IAGV,iCACE,SAACJ,EAAD,CAAMqB,SAjBW,SAAAC,GACnBA,EAAEC,iBACGlC,EAIL2B,IAHEQ,MAAM,QAIT,EAUG,UACE,UAACtB,EAAD,YACE,SAACH,EAAD,CAAO0B,KAAK,OAAOC,SAVP,SAAAJ,GAClBd,EAAgB,CAAEnB,MAAOiC,EAAEK,OAAOC,OACnC,KASO,SAAC3B,EAAD,CAAQwB,KAAK,SAAb,SAAsB,iBAG1B,2BACc,YAAXd,GAAwB,aACb,aAAXA,IAAyB,wBAAKF,EAAMoB,UAEzB,aAAXlB,IACC,SAAC,KAAD,WACE,SAAC,KAAD,UACGP,GACCA,EAAO0B,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAV,OACT,SAAC,KAAD,CACEC,GAAE,kBAAaD,GACfE,MAAO,CAAEC,KAAMtB,GAFjB,SAKGkB,GAFIC,EAJE,aAe1B,C","sources":["api/api.jsx","pages/HomePages/home.styled.jsx","pages/MoviesPages/Movies.styled.jsx","pages/MoviesPages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '3f267efdd2dfa6b504977d892a47bb84';\n\nexport const getTrendMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}/trending/all/week?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const searchMovies = async query => {\n  const { data } = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&include_adult=false&language=en-US&page=1`\n  );\n  return data;\n};\n\nexport const getMoviesDeteils = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const getMoviesCredits = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const getMoviesReviews = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  font-size: 30px;\n  align-items: center;\n}\n`;\n\nexport const Div = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n`;\n\nexport const Linkser = styled(Link)`\n  font-weight: 600;\n  color: black;\n  text-decoration: none;\n  font-size: 25px;\n  padding: 5px;\n  display: inline-block;\n\n  &:active {\n    color: green;\n  }\n\n  &:hover,\n  &:focus {\n    color: blue;\n    border: 1px solid black;\n    background: grey;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  width: 700px;\n  height: 50px;\n  border-radius: 10px;\n  border: 4px solid black;\n  font-size: 25px;\n`;\n\nexport const Form = styled.form`\n  margin-top: 30px;\n  display: flex;\n  align-content: stretch;\n  justify-content: center;\n`;\n\nexport const Button = styled.button`\n  width: 100px;\n  height: 50px;\n  border-radius: 10px;\n  border: 4px solid;\n  font-size: 20px;\n  margin-top: 15px;\n\n  &:hover {\n    color: blue;\n    border: 1px solid black;\n    background: grey;\n  }\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n","import { List } from 'pages/HomePages/home.styled';\nimport { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { searchMovies } from 'api/api';\nimport { Input, Form, Button, Label } from './Movies.styled';\nimport { Div, Linkser } from 'pages/HomePages/home.styled';\n\nconst Movies = () => {\n  const [search, setSearch] = useState([]);\n  const [searchParams, setSearchparams] = useSearchParams();\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState('idle');\n  const location = useLocation();\n  const query = searchParams.get('query');\n\n  const findMovies = async () => {\n    if (!query) return;\n\n    setStatus('pending');\n\n    try {\n      const { results } = await searchMovies(query);\n      setSearch(results);\n      setStatus('resolved');\n    } catch (error) {\n      setError(error);\n      setStatus('rejected');\n    }\n  };\n\n  useEffect(() => {\n    findMovies();\n    // eslint-disable-next-line\n  }, []);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!query) {\n      alert('sorry');\n      return;\n    }\n    findMovies();\n  };\n\n  const updateInput = e => {\n    setSearchparams({ query: e.target.value });\n  };\n\n  console.log(search);\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <Label>\n          <Input type=\"text\" onChange={updateInput} />\n          <Button type=\"submit\">Search</Button>\n        </Label>\n      </Form>\n      <div>\n        {status === 'pending' && 'Loading...'}\n        {status === 'rejected' && <h3>{error.message}</h3>}\n\n        {status === 'resolved' && (\n          <Div>\n            <List>\n              {search &&\n                search.map(({ title, id }) => (\n                  <Linkser\n                    to={`/movies/${id}`}\n                    state={{ from: location }}\n                    key={id}\n                  >\n                    {title}\n                  </Linkser>\n                ))}\n            </List>\n          </Div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["BASE_URL","API_KEY","getTrendMovies","axios","data","searchMovies","query","getMoviesDeteils","movieId","getMoviesCredits","getMoviesReviews","List","styled","Div","Linkser","Link","Input","Form","Button","Label","useState","search","setSearch","useSearchParams","searchParams","setSearchparams","error","setError","status","setStatus","location","useLocation","get","findMovies","results","useEffect","console","log","onSubmit","e","preventDefault","alert","type","onChange","target","value","message","map","title","id","to","state","from"],"sourceRoot":""}