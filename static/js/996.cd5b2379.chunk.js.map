{"version":3,"file":"static/js/996.cd5b2379.chunk.js","mappings":"+SAEMA,EAAW,+BACXC,EAAU,mCAEHC,EAAc,mCAAG,sGACLC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,sCACoBC,IAFf,uBACpBG,EADoB,EACpBA,KADoB,kBAIrBA,GAJqB,2CAAH,qDAOdC,EAAY,mCAAG,WAAMC,GAAN,yFACHH,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iCACeC,EADf,kBACgCK,EADhC,+CADG,uBAClBF,EADkB,EAClBA,KADkB,kBAInBA,GAJmB,2CAAH,sDAOZG,EAAgB,mCAAG,WAAMC,GAAN,yFACPL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAQ,EADA,oBACmBP,EADnB,oBADO,uBACtBG,EADsB,EACtBA,KADsB,kBAIvBA,GAJuB,2CAAH,sDAOhBK,EAAgB,mCAAG,WAAMD,GAAN,yFACPL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAQ,EADA,4BAC2BP,EAD3B,oBADO,uBACtBG,EADsB,EACtBA,KADsB,kBAIvBA,GAJuB,2CAAH,sDAOhBM,EAAgB,mCAAG,WAAMF,GAAN,yFACPL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAQ,EADA,4BAC2BP,EAD3B,oBADO,uBACtBG,EADsB,EACtBA,KADsB,kBAIvBA,GAJuB,2CAAH,qD,iHCW7B,UAvCa,WACX,OAA0BO,EAAAA,EAAAA,YAA1B,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA4BJ,EAAAA,EAAAA,UAAS,WAArC,eAAOK,EAAP,KAAeC,EAAf,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAgB,mCAAG,8GAEFjB,EAAAA,EAAAA,MAFE,OAEfE,EAFe,OAGrBS,EAAST,EAAKgB,SACdH,EAAU,YAJW,gDAMrBF,EAAS,EAAD,IACRE,EAAU,YAPW,yDAAH,qDAWtBE,GACD,GAAE,KAGD,2BACc,YAAXH,GAAwB,aACb,aAAXA,IAAyB,wBAAKF,EAAMO,UAEzB,aAAXL,IACC,SAAC,IAAD,UACGJ,GACCA,EAAMU,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAV,OACR,SAAC,KAAD,CAAMC,GAAE,kBAAaD,GAArB,SACGD,GAD6BC,EADxB,QASrB,C,qECxCYE,E,OAAOC,GAAAA,GAAH,wF","sources":["api/api.jsx","pages/HomePages/Home.jsx","pages/HomePages/home.styled.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '3f267efdd2dfa6b504977d892a47bb84';\n\nexport const getTrendMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}/trending/all/week?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const searchMovies = async query => {\n  const { data } = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&include_adult=false&language=en-US&page=1`\n  );\n  return data;\n};\n\nexport const getMoviesDeteils = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const getMoviesCredits = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const getMoviesReviews = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n","import { useEffect, useState } from 'react';\nimport { getTrendMovies } from 'api/api';\nimport { Link } from 'react-router-dom';\nimport { List } from './home.styled';\n\nconst Home = () => {\n  const [trend, setTrend] = useState();\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState('pending');\n\n  useEffect(() => {\n    const fetchTrendMovies = async () => {\n      try {\n        const data = await getTrendMovies();\n        setTrend(data.results);\n        setStatus('resolved');\n      } catch (error) {\n        setError(error);\n        setStatus('rejected');\n      }\n    };\n\n    fetchTrendMovies();\n  }, []);\n\n  return (\n    <div>\n      {status === 'pending' && 'Loading...'}\n      {status === 'rejected' && <h3>{error.message}</h3>}\n\n      {status === 'resolved' && (\n        <List>\n          {trend &&\n            trend.map(({ title, id }) => (\n              <Link to={`/movies/${id}`} key={id}>\n                {title}\n              </Link>\n            ))}\n        </List>\n      )}\n    </div>\n  );\n};\n\nexport default Home;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  font-size: 30px;\n`;\n"],"names":["BASE_URL","API_KEY","getTrendMovies","axios","data","searchMovies","query","getMoviesDeteils","movieId","getMoviesCredits","getMoviesReviews","useState","trend","setTrend","error","setError","status","setStatus","useEffect","fetchTrendMovies","results","message","map","title","id","to","List","styled"],"sourceRoot":""}