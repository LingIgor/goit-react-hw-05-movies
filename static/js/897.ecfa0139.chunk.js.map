{"version":3,"file":"static/js/897.ecfa0139.chunk.js","mappings":"+SAEMA,EAAW,+BACXC,EAAU,mCAEHC,EAAc,mCAAG,sGACLC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,sCACoBC,IAFf,uBACpBG,EADoB,EACpBA,KADoB,kBAIrBA,GAJqB,2CAAH,qDAOdC,EAAY,mCAAG,WAAMC,GAAN,yFACHH,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iCACeC,EADf,kBACgCK,EADhC,+CADG,uBAClBF,EADkB,EAClBA,KADkB,kBAInBA,GAJmB,2CAAH,sDAOZG,EAAgB,mCAAG,WAAMC,GAAN,yFACPL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAQ,EADA,oBACmBP,EADnB,oBADO,uBACtBG,EADsB,EACtBA,KADsB,kBAIvBA,GAJuB,2CAAH,sDAOhBK,EAAgB,mCAAG,WAAMD,GAAN,yFACPL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAQ,EADA,4BAC2BP,EAD3B,oBADO,uBACtBG,EADsB,EACtBA,KADsB,kBAIvBA,GAJuB,2CAAH,sDAOhBM,EAAgB,mCAAG,WAAMF,GAAN,yFACPL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAQ,EADA,4BAC2BP,EAD3B,oBADO,uBACtBG,EADsB,EACtBA,KADsB,kBAIvBA,GAJuB,2CAAH,qD,qEC/BhBO,E,OAAOC,GAAAA,GAAH,wF,0HCmEjB,UAhEe,WACb,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0BL,EAAAA,EAAAA,UAAS,MAAnC,eAAOM,EAAP,KAAcC,EAAd,KACA,GAA4BP,EAAAA,EAAAA,UAAS,QAArC,eAAOQ,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MACXlB,EAAQW,EAAaQ,IAAI,SAEzBC,EAAU,mCAAG,yFACZpB,EADY,wDAGjBgB,EAAU,WAHO,mBAMWjB,EAAAA,EAAAA,IAAaC,GANxB,gBAMPqB,EANO,EAMPA,QACRZ,EAAUY,GACVL,EAAU,YARK,kDAUfF,EAAS,EAAD,IACRE,EAAU,YAXK,0DAAH,sDAehBM,EAAAA,EAAAA,YAAU,WACRF,GAED,GAAE,IAWH,OACE,iCACE,iBAAMG,SAXW,SAAAC,GACnBA,EAAEC,iBACFL,GACD,EAQG,UACE,8BACE,kBAAOM,KAAK,OAAOC,SARP,SAAAH,GAClBZ,EAAgB,CAAEZ,MAAOwB,EAAEI,OAAOC,OACnC,KAOO,mBAAQH,KAAK,SAAb,SAAsB,iBAG1B,2BACc,YAAXX,GAAwB,aACb,aAAXA,IAAyB,wBAAKF,EAAMiB,UAEzB,aAAXf,IACC,SAAC,IAAD,UACGP,GACCA,EAAOuB,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAV,OACT,SAAC,KAAD,CAAMC,GAAE,kBAAaD,GAAME,MAAO,CAAEC,KAAMnB,GAA1C,SACGe,GADwDC,EADlD,WAUxB,C","sources":["api/api.jsx","pages/HomePages/home.styled.jsx","pages/MoviesPages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '3f267efdd2dfa6b504977d892a47bb84';\n\nexport const getTrendMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}/trending/all/week?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const searchMovies = async query => {\n  const { data } = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&include_adult=false&language=en-US&page=1`\n  );\n  return data;\n};\n\nexport const getMoviesDeteils = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const getMoviesCredits = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const getMoviesReviews = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  font-size: 30px;\n`;\n","import { List } from 'pages/HomePages/home.styled';\nimport { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { searchMovies } from 'api/api';\n\nconst Movies = () => {\n  const [search, setSearch] = useState([]);\n  const [searchParams, setSearchparams] = useSearchParams();\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState('idle');\n  const location = useLocation();\n  const query = searchParams.get('query');\n\n  const findMovies = async () => {\n    if (!query) return;\n\n    setStatus('pending');\n\n    try {\n      const { results } = await searchMovies(query);\n      setSearch(results);\n      setStatus('resolved');\n    } catch (error) {\n      setError(error);\n      setStatus('rejected');\n    }\n  };\n\n  useEffect(() => {\n    findMovies();\n    // eslint-disable-next-line\n  }, []);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    findMovies();\n  };\n\n  const updateInput = e => {\n    setSearchparams({ query: e.target.value });\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <label>\n          <input type=\"text\" onChange={updateInput} />\n          <button type=\"submit\">Search</button>\n        </label>\n      </form>\n      <div>\n        {status === 'pending' && 'Loading...'}\n        {status === 'rejected' && <h3>{error.message}</h3>}\n\n        {status === 'resolved' && (\n          <List>\n            {search &&\n              search.map(({ title, id }) => (\n                <Link to={`/movies/${id}`} state={{ from: location }} key={id}>\n                  {title}\n                </Link>\n              ))}\n          </List>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["BASE_URL","API_KEY","getTrendMovies","axios","data","searchMovies","query","getMoviesDeteils","movieId","getMoviesCredits","getMoviesReviews","List","styled","useState","search","setSearch","useSearchParams","searchParams","setSearchparams","error","setError","status","setStatus","location","useLocation","get","findMovies","results","useEffect","onSubmit","e","preventDefault","type","onChange","target","value","message","map","title","id","to","state","from"],"sourceRoot":""}