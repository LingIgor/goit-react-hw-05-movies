{"version":3,"file":"static/js/961.9fa06274.chunk.js","mappings":"+SAEMA,EAAW,+BACXC,EAAU,mCAEHC,EAAc,mCAAG,sGACLC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,sCACoBC,IAFf,uBACpBG,EADoB,EACpBA,KADoB,kBAIrBA,GAJqB,2CAAH,qDAOdC,EAAY,mCAAG,WAAMC,GAAN,yFACHH,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iCACeC,EADf,kBACgCK,EADhC,+CADG,uBAClBF,EADkB,EAClBA,KADkB,kBAInBA,GAJmB,2CAAH,sDAOZG,EAAgB,mCAAG,WAAMC,GAAN,yFACPL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAQ,EADA,oBACmBP,EADnB,oBADO,uBACtBG,EADsB,EACtBA,KADsB,kBAIvBA,GAJuB,2CAAH,sDAOhBK,EAAgB,mCAAG,WAAMD,GAAN,yFACPL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAQ,EADA,4BAC2BP,EAD3B,oBADO,uBACtBG,EADsB,EACtBA,KADsB,kBAIvBA,GAJuB,2CAAH,sDAOhBM,EAAgB,mCAAG,WAAMF,GAAN,yFACPL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAQ,EADA,4BAC2BP,EAD3B,oBADO,uBACtBG,EADsB,EACtBA,KADsB,kBAIvBA,GAJuB,2CAAH,qD,iHC+B7B,UA5DqB,WAAO,IAAD,IACzB,GAA8BO,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA4BJ,EAAAA,EAAAA,UAAS,WAArC,eAAOK,EAAP,KAAeC,EAAf,KACQT,GAAYU,EAAAA,EAAAA,MAAZV,QAEFW,GAAWC,EAAAA,EAAAA,OAIjBC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,8GAEHf,EAAAA,EAAAA,IAAiBC,GAFd,OAEhBJ,EAFgB,OAGtBS,EAAWT,GACXa,EAAU,YAJY,gDAMtBA,EAAU,YACVF,EAAS,EAAD,IAPc,yDAAH,qDAUvBO,EAAkBd,EACnB,GAAE,CAACA,IAEJ,IAAQe,EAAuDX,EAAvDW,MAAOC,EAAgDZ,EAAhDY,YAAaC,EAAmCb,EAAnCa,aAAcC,EAAqBd,EAArBc,SAAUC,EAAWf,EAAXe,OAE9CC,EAAYH,EAAY,WACP,GAAfA,GAAmBI,QAAQ,GADL,KAE1B,gBAEJ,OACE,4BACE,0BACE,SAAC,KAAD,CAAMC,GAAE,oBAAEX,EAASY,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,IAAlC,SAAuC,cAG7B,YAAXhB,GAAwB,aACb,aAAXA,IAAyB,wBAAKF,EAAMmB,UAEzB,aAAXjB,IACC,4BACE,gBAAKkB,IAAG,UAjCA,oCAiCA,OAAeV,GAAeW,IAAKZ,KAC1C,wBAAKA,KACN,yBAAG,eAAaK,MAChB,wBAAI,cACJ,uBAAIF,KACJ,wBAAI,WACHC,GAAUA,EAAOS,KAAI,SAAAC,GAAE,OAAI,uBAAgBA,EAAGC,MAAXD,EAAGE,GAAf,KACxB,4BACE,uBAAG,4BACH,SAAC,KAAD,CAAMT,GAAG,OAAT,SAAgB,YAChB,SAAC,KAAD,CAAMA,GAAG,UAAT,SAAmB,qBAIzB,SAAC,KAAD,MAGL,C","sources":["api/api.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '3f267efdd2dfa6b504977d892a47bb84';\n\nexport const getTrendMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}/trending/all/week?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const searchMovies = async query => {\n  const { data } = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&include_adult=false&language=en-US&page=1`\n  );\n  return data;\n};\n\nexport const getMoviesDeteils = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const getMoviesCredits = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const getMoviesReviews = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n","import { useEffect, useState } from 'react';\nimport { getMoviesDeteils } from 'api/api';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\n\nconst MovieDetails = () => {\n  const [details, setDetails] = useState('');\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState('pending');\n  const { movieId } = useParams();\n\n  const location = useLocation();\n\n  const baseUrl = 'https://image.tmdb.org/t/p/w500/';\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        const data = await getMoviesDeteils(movieId);\n        setDetails(data);\n        setStatus('resolved');\n      } catch (error) {\n        setStatus('rejected');\n        setError(error);\n      }\n    };\n    fetchMovieDetails(movieId);\n  }, [movieId]);\n\n  const { title, poster_path, vote_average, overview, genres } = details;\n\n  const userScore = vote_average\n    ? `${(vote_average * 10).toFixed(0)}%`\n    : 'Not rated yet';\n\n  return (\n    <div>\n      <div>\n        <Link to={location.state?.from ?? '/'}>Go back</Link>\n      </div>\n\n      {status === 'pending' && 'Loading...'}\n      {status === 'rejected' && <h3>{error.message}</h3>}\n\n      {status === 'resolved' && (\n        <div>\n          <img src={`${baseUrl}${poster_path}`} alt={title} />\n          {<h1>{title}</h1>}\n          <p>User score: {userScore}</p>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <h2>Genres</h2>\n          {genres && genres.map(el => <p key={el.id}>{el.name}</p>)}\n          <div>\n            <p>Additional information</p>\n            <Link to=\"cast\"> Cast </Link>\n            <Link to=\"reviews\"> Reviews </Link>\n          </div>\n        </div>\n      )}\n      <Outlet />\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["BASE_URL","API_KEY","getTrendMovies","axios","data","searchMovies","query","getMoviesDeteils","movieId","getMoviesCredits","getMoviesReviews","useState","details","setDetails","error","setError","status","setStatus","useParams","location","useLocation","useEffect","fetchMovieDetails","title","poster_path","vote_average","overview","genres","userScore","toFixed","to","state","from","message","src","alt","map","el","name","id"],"sourceRoot":""}