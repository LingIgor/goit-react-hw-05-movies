{"version":3,"file":"static/js/186.297dddc2.chunk.js","mappings":"+SAEMA,EAAW,+BACXC,EAAU,mCAEHC,EAAc,mCAAG,sGACLC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,sCACoBC,IAFf,uBACpBG,EADoB,EACpBA,KADoB,kBAIrBA,GAJqB,2CAAH,qDAOdC,EAAY,mCAAG,WAAMC,GAAN,yFACHH,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iCACeC,EADf,kBACgCK,EADhC,+CADG,uBAClBF,EADkB,EAClBA,KADkB,kBAInBA,GAJmB,2CAAH,sDAOZG,EAAgB,mCAAG,WAAMC,GAAN,yFACPL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAQ,EADA,oBACmBP,EADnB,oBADO,uBACtBG,EADsB,EACtBA,KADsB,kBAIvBA,GAJuB,2CAAH,sDAOhBK,EAAgB,mCAAG,WAAMD,GAAN,yFACPL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAQ,EADA,4BAC2BP,EAD3B,oBADO,uBACtBG,EADsB,EACtBA,KADsB,kBAIvBA,GAJuB,2CAAH,sDAOhBM,EAAgB,mCAAG,WAAMF,GAAN,yFACPL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAQ,EADA,4BAC2BP,EAD3B,oBADO,uBACtBG,EADsB,EACtBA,KADsB,kBAIvBA,GAJuB,2CAAH,qD,yGCkB7B,UA/CgB,WACd,OAA8BO,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA4BJ,EAAAA,EAAAA,UAAS,MAArC,eAAOK,EAAP,KAAeC,EAAf,KAEQT,GAAYU,EAAAA,EAAAA,MAAZV,SAERW,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,8GAEIV,EAAAA,EAAAA,IAAiBF,GAFrB,OAETJ,EAFS,OAGfS,EAAWT,GACXa,EAAU,YAJK,gDAMfF,EAAS,EAAD,IACRE,EAAU,YAPK,yDAAH,qDAWhBG,GACD,GAAE,CAACZ,IAEJ,IAAQa,EAAYT,EAAZS,QAER,OACE,gCACc,YAAXL,GAAwB,aACb,aAAXA,IAAyB,wBAAKF,EAAMQ,UACzB,aAAXN,IACC,0BACsB,IAAnBK,EAAQE,SACP,wBAAI,0DAGLF,GACCA,EAAQG,KAAI,SAAAC,GAAE,OACZ,2BACE,wBAAKA,EAAGC,UACR,uBAAID,EAAGE,YAFAF,EAAGG,GADA,SAUzB,C","sources":["api/api.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '3f267efdd2dfa6b504977d892a47bb84';\n\nexport const getTrendMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}/trending/all/week?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const searchMovies = async query => {\n  const { data } = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&include_adult=false&language=en-US&page=1`\n  );\n  return data;\n};\n\nexport const getMoviesDeteils = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const getMoviesCredits = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const getMoviesReviews = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n","import { getMoviesReviews } from 'api/api';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getReviews = async () => {\n      try {\n        const data = await getMoviesReviews(movieId);\n        setReviews(data);\n        setStatus('resolved');\n      } catch (error) {\n        setError(error);\n        setStatus('rejected');\n      }\n    };\n\n    getReviews();\n  }, [movieId]);\n\n  const { results } = reviews;\n\n  return (\n    <>\n      {status === 'pending' && 'Loading...'}\n      {status === 'rejected' && <h3>{error.message}</h3>}\n      {status === 'resolved' && (\n        <ul>\n          {results.length === 0 && (\n            <h1>Sorry, we don't have any reviews for this movie yet. </h1>\n          )}\n\n          {results &&\n            results.map(el => (\n              <li key={el.id}>\n                <h1>{el.author}</h1>\n                <p>{el.content}</p>\n              </li>\n            ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["BASE_URL","API_KEY","getTrendMovies","axios","data","searchMovies","query","getMoviesDeteils","movieId","getMoviesCredits","getMoviesReviews","useState","reviews","setReviews","error","setError","status","setStatus","useParams","useEffect","getReviews","results","message","length","map","el","author","content","id"],"sourceRoot":""}