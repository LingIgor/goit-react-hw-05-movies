{"version":3,"file":"static/js/408.3bb96d01.chunk.js","mappings":"+SAEMA,EAAW,+BACXC,EAAU,mCAEHC,EAAc,mCAAG,sGACLC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,sCACoBC,IAFf,uBACpBG,EADoB,EACpBA,KADoB,kBAIrBA,GAJqB,2CAAH,qDAOdC,EAAY,mCAAG,WAAMC,GAAN,yFACHH,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iCACeC,EADf,kBACgCK,EADhC,+CADG,uBAClBF,EADkB,EAClBA,KADkB,kBAInBA,GAJmB,2CAAH,sDAOZG,EAAgB,mCAAG,WAAMC,GAAN,yFACPL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAQ,EADA,oBACmBP,EADnB,oBADO,uBACtBG,EADsB,EACtBA,KADsB,kBAIvBA,GAJuB,2CAAH,sDAOhBK,EAAgB,mCAAG,WAAMD,GAAN,yFACPL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAQ,EADA,4BAC2BP,EAD3B,oBADO,uBACtBG,EADsB,EACtBA,KADsB,kBAIvBA,GAJuB,2CAAH,sDAOhBM,EAAgB,mCAAG,WAAMF,GAAN,yFACPL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAQ,EADA,4BAC2BP,EAD3B,oBADO,uBACtBG,EADsB,EACtBA,KADsB,kBAIvBA,GAJuB,2CAAH,qD,iJC/BhBO,E,OAASC,GAAAA,GAAH,4E,kBCyDnB,EApDa,WACX,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA4BJ,EAAAA,EAAAA,UAAS,MAArC,eAAOK,EAAP,KAAeC,EAAf,KAIQX,GAAYY,EAAAA,EAAAA,MAAZZ,SAERa,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,8GAEKb,EAAAA,EAAAA,IAAiBD,GAFtB,OAERJ,EAFQ,OAGdW,EAAUX,GACVe,EAAU,YAJI,gDAMdF,EAAS,EAAD,IACRE,EAAU,YAPI,yDAAH,qDAWfG,GACD,GAAE,CAACd,IAEJ,IAAQe,EAAST,EAATS,KAER,OACE,gCACc,YAAXL,GAAwB,aACb,aAAXA,IAAyB,wBAAKF,EAAMQ,UACzB,aAAXN,IACC,UAACP,EAAD,WACmB,IAAhBY,EAAKE,SACJ,wBAAI,sDAELF,GACCA,EAAKG,KAAI,SAAAC,GAAE,OACT,2BACE,SAAC,KAAD,UAAOA,EAAGC,QACV,gBACEC,IAAG,UAnCH,oCAmCG,OAAeF,EAAGG,cACrBC,IAAKJ,EAAGC,KACRI,MAAM,YALDL,EAAGM,GADH,SActB,C,qKCtDYC,GAAOtB,EAAAA,EAAAA,IAAOuB,EAAAA,GAAPvB,CAAH,4GAOJwB,EAAOxB,EAAAA,GAAAA,EAAH,iEAKJyB,EAAOzB,EAAAA,GAAAA,IAAH,wDAKJ0B,EAAU1B,EAAAA,GAAAA,IAAH,mG","sources":["api/api.jsx","components/Cast/castStyled.jsx","components/Cast/Cast.jsx","pages/MovieDetails/MovieDetailStyled.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '3f267efdd2dfa6b504977d892a47bb84';\n\nexport const getTrendMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}/trending/all/week?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const searchMovies = async query => {\n  const { data } = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&include_adult=false&language=en-US&page=1`\n  );\n  return data;\n};\n\nexport const getMoviesDeteils = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const getMoviesCredits = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const getMoviesReviews = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n","import styled from 'styled-components';\n\nexport const Actors = styled.ul`\n  display: flex;\n  gap: 15px;\n  flex-wrap: wrap;\n`;\n","import { useEffect, useState } from 'react';\nimport { getMoviesCredits } from 'api/api';\nimport { useParams } from 'react-router-dom';\n\nimport { Actors } from './castStyled';\nimport { Text } from 'pages/MovieDetails/MovieDetailStyled';\n\nconst Cast = () => {\n  const [actors, setActors] = useState([]);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState(null);\n\n  const baseUrl = 'https://image.tmdb.org/t/p/w500/';\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getActors = async () => {\n      try {\n        const data = await getMoviesCredits(movieId);\n        setActors(data);\n        setStatus('resolved');\n      } catch (error) {\n        setError(error);\n        setStatus('rejected');\n      }\n    };\n\n    getActors();\n  }, [movieId]);\n\n  const { cast } = actors;\n\n  return (\n    <>\n      {status === 'pending' && 'Loading...'}\n      {status === 'rejected' && <h3>{error.message}</h3>}\n      {status === 'resolved' && (\n        <Actors>\n          {cast.length === 0 && (\n            <h1>We don't have any information about the cast yet.</h1>\n          )}\n          {cast &&\n            cast.map(el => (\n              <li key={el.id}>\n                <Text>{el.name}</Text>\n                <img\n                  src={`${baseUrl}${el.profile_path}`}\n                  alt={el.name}\n                  width=\"170px\"\n                />\n              </li>\n            ))}\n        </Actors>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Back = styled(Link)`\n  font-size: 25px;\n  font-weight: 600;\n  text-decoration: none;\n  color: green;\n`;\n\nexport const Text = styled.p`\n  font-size: 20px;\n  font-weight: 400;\n`;\n\nexport const Wrap = styled.div`\n  display: flex;\n  gap: 40px;\n`;\n\nexport const Wrapper = styled.div`\ndisplay: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n`;\n"],"names":["BASE_URL","API_KEY","getTrendMovies","axios","data","searchMovies","query","getMoviesDeteils","movieId","getMoviesCredits","getMoviesReviews","Actors","styled","useState","actors","setActors","error","setError","status","setStatus","useParams","useEffect","getActors","cast","message","length","map","el","name","src","profile_path","alt","width","id","Back","Link","Text","Wrap","Wrapper"],"sourceRoot":""}